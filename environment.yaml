# reasons you might want to use `environment.yaml` instead of `requirements.txt`:
# - pip installs packages in a loop, without ensuring dependencies across all packages
#   are fulfilled simultaneously, but conda achieves proper dependency control across
#   all packages
# - conda allows for installing packages without requiring certain compilers or
#   libraries to be available in the system, since it installs precompiled binaries

name: diffesm

channels:
  - pytorch
  - conda-forge
  - nvidia
  - defaults

# it is strongly recommended to specify versions of packages installed through conda
# to avoid situation when version-unspecified packages install their latest major
# versions which can sometimes break things

# current approach below keeps the dependencies in the same major versions across all
# users, but allows for different minor and patch versions of packages where backwards
# compatibility is usually guaranteed

dependencies:
  - python=3.10
  - pytorch=2.0
  - pytorch-cuda=11.7
  - torchvision
  - hydra-core=1.3
  - pre-commit
  - wandb
  - einops
  - tqdm
  - accelerate
  - pip

# pip dependencies are installed after conda dependencies, so they can override
# conda dependencies if needed
  - pip:
    - rootutils
